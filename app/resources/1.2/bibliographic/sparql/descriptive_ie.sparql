PREFIX dct: <http://purl.org/dc/terms/> 
PREFIX sh: <http://www.w3.org/ns/shacl#> 
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
PREFIX skos: <http://www.w3.org/2004/02/skos/core#> 
PREFIX owl: <http://www.w3.org/2002/07/owl#> 
PREFIX schema: <https://schema.org/> 
PREFIX pav: <http://purl.org/pav/>
PREFIX premisowl: <http://www.loc.gov/premis/rdf/v3/>
PREFIX haObj: <https://data.hetarchief.be/ns/object/> 
PREFIX haObjId: <https://data.hetarchief.be/id/entity/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
PREFIX edtf: <http://id.loc.gov/datatypes/edtf/> 
PREFIX mods: <http://www.loc.gov/mods/rdf/v1#> 
PREFIX madsrdf: <http://www.loc.gov/mads/rdf/v1#> 
PREFIX edm: <http://www.europeana.eu/schemas/edm/> 
PREFIX bf: <http://id.loc.gov/ontologies/bibframe/> 
PREFIX mods: <http://www.loc.gov/mods/v3#> 
PREFIX fx: <http://sparql.xyz/facade-x/ns/> 
PREFIX xyz: <http://sparql.xyz/facade-x/data/> 
PREFIX haDes: <https://data.hetarchief.be/ns/description/>
PREFIX haSip: <https://data.hetarchief.be/ns/sip/> 


CONSTRUCT {
    ?work a bf:Work, premisowl:IntellectualEntity, ?extraType, ?manuscript_type ;
        bf:identifiedBy ?identifier_with_type_iri, ?identifier_iri ;
        bf:adminMetadata ?record_iri ;
        rdfs:label ?mainTitle ;
        bf:title ?altTitle_iri, ?mainTitle_iri ;
        bf:genreForm ?genre_iri ;
        bf:language ?language_iri ;
        bf:summary ?abstract_iri ;
        bf:subject ?topic_iri ;
        bf:contribution ?contribution_iri ;
        bf:originDate ?dateCreated ;
        bf:provisionActivity ?provision_activity_iri ;
        bf:issuance ?issuance ;
        haDes:numberOfPages ?number_of_pages ;
        bf:carrier ?carrier_iri ;
        ?relatedItem_prop_iri ?relatedItem_iri ;
        bf:usageAndAccessPolicy ?license_iri .
    
    ?identifier_with_type_iri a bf:Identifier, ?identifier_type_iri ;
        rdf:value ?identifier_with_type .

    ?identifier_iri a bf:Identifier;
        rdf:value ?identifier .
        
    ?record_iri a bf:AdminMetadata ;
        bf:identifiedBy ?recordInfo_identifier_iri .

    ?recordInfo_identifier_iri a bf:Identifier ;
        rdf:value ?recordInfo_identifier .

    ?mainTitle_iri a bf:Title ;
        rdfs:label ?mainTitle ;
        ?_titleInfo_attribute ?_titleInfo_attr_value .

    ?altTitle_iri a bf:VariantTitle ;
        rdfs:label ?altTitle ;
        bf:variantType ?title_info_type, ?title_info_othertype ;
        ?_titleInfo_attribute ?_titleInfo_attr_value .

    ?genre_iri a bf:GenreForm ;
        rdfs:label ?genre ;
        bf:source ?genre_source_iri ;
        ?_genre_attribute ?_genre_attr_value .

    ?genre_source_iri a bf:Source ;
        rdfs:label ?genre_source .
        
    ?language_iri a ?language_type ;
        rdfs:label ?language .

    ?abstract_iri a bf:Summary ;
        rdfs:label ?abstract ;
        ?_abstract_attribute ?_abstract_attr_value .

    ?topic_iri a bf:Topic ;
        rdfs:label ?topic ;
        ?_subject_attribute ?_subject_attr_value .

    ?contribution_iri a bf:Contribution ;
        bf:agent ?agent_iri ;
        bf:role ?role_iri .

    ?agent_iri a ?agent_type ;
        ?namePart_prop ?namePart .

    ?role_iri a bf:Role ;
        ?roleTerm_prop ?roleTerm .

    ?provision_activity_iri a ?provisionActivity_type ;
        bf:place ?place_iri ;
        bf:agent ?prov_agent_iri ;
        bf:date ?dateIssued .
    
    ?prov_agent_iri a bf:Agent ;
        rdfs:label ?publisher .

    ?place_iri a bf:Place ;
        ?placeTerm_prop ?placeTerm ;
        bf:source ?place_source_iri ;
        ?_place_attribute ?_place_attr_value .

    ?place_source_iri a bf:Source ;
        rdfs:label ?place_source .

    ?extent_iri a bf:Extent ;
        rdfs:label ?extent ;
        bf:unit ?extent_unit_iri ;
        ?_extent_attribute ?_extent_attr_value .

    ?extent_unit_iri a bf:Unit ;
        rdfs:label ?extent_unit .

    ?carrier_iri a bf:Carrier ;
        rdfs:label ?form ;
        bf:appliedMaterial ?applied_material_iri ;
        bf:baseMaterial ?base_material_iri ;
        bf:source ?carrier_source_iri ;
        bf:note ?physDes_note_iri ;
        bf:responsibilityStatement ?responsibilityStatement ;
        bf:extent ?extent_iri ;
        ?_form_attribute ?_form_attr_value .

    ?applied_material_iri a bf:AppliedMaterial ;
        rdfs:label ?form_schrijfstoffen ;
        skos:note "schrijfstoffen" ;
        bf:source ?applied_material_source_iri .

    ?applied_material_source_iri a bf:Source ;
        rdfs:label ?applied_material_source .

    ?base_material_iri a bf:BaseMaterial ;
        rdfs:label ?form_papiersoort ;
        skos:note "papiersoort" ;
        bf:source ?base_material_source_iri .

    ?base_material_source_iri a bf:Source ;
        rdfs:label ?base_material_source .

    ?carrier_source_iri a bf:Source ;
        rdfs:label ?carrier_source .

    ?physDes_note_iri a ?physDes_note_type_iri ;
        rdfs:label ?physDes_note ;
        bf:noteType ?physDes_note_type .

    ?relatedItem_iri a ?relatedItem_type_iri ;
        bf:identifiedBy ?relatedItem_identifier_iri, ?abraham_iri ;
        bf:title ?mainRelatedItemTitle_iri .

    ?mainRelatedItemTitle_iri a bf:Title ;
        rdfs:label ?mainRelatedItemTitle .

    ?abraham_iri a bf:Identifier ;
        rdf:value ?abraham_id ;
        bf:source ?abraham_source_iri .

    ?relatedItem_identifier_iri a bf:Identifier ;
        rdf:value ?relatedItem_identifier ;
        rdfs:label ?relatedItem_identifier_type ;
        bf:source ?abraham_source_iri .

    ?abraham_source_iri a bf:Source ;
        rdfs:label ?abraham_source_label .

    ?license_iri a ?license_type ;
        rdfs:label ?note ;
        ?_license_attribute ?_license_attr_value .
}
WHERE {
    SERVICE <x-sparql-anything:location={{ bag_path }}/data/metadata/descriptive/mods.xml> {
        OPTIONAL {
            ?modsElement a mods:mods .
            OPTIONAL {
                ?modsElement xyz:version ?modsVersion .
            }
        }
        OPTIONAL {
            {
                SELECT DISTINCT ?identifier_with_type ?_identifier_with_type_type ?_identifier_type_element
                WHERE {
                    OPTIONAL {
                        ?root a fx:root .
                        ?root ?root_list_1 ?_identifier_type_element .
                        ?_identifier_type_element a mods:identifier ;
                            rdf:_1 ?identifier_with_type ;
                         xyz:type ?_identifier_with_type_type
                    }
                }
            }
            BIND(
                IF(
                    BOUND(?_identifier_type_element),
                    concat("""mods:identifier can not have a 'type' attribute. (""", ?_identifier_with_type_type, ", ", ?identifier_with_type, """)""") ,
                    ?_null
                )
            as ?identifier_with_type_iri)
            BIND(
                IF(
                    BOUND(?_identifier_type_element),
                    iri(CONCAT(str(haObj:), ?_identifier_with_type_type)),
                    ?_null
                )
            as ?identifier_type_iri)
        }
        ?root a fx:root .
        # mods:mods/mods:identifier[not(@*)]
        OPTIONAL {
            ?root ?root_list_1 ?_identifier_element .
            ?_identifier_element a mods:identifier ;
                rdf:_1 ?identifier .
            OPTIONAL {
                ?_identifier_element xyz:type ?_identifier_type
            }
            OPTIONAL {
                ?_identifier_element ?_identifier_attribute ?_identifier_attr_value .
                FILTER(?_identifier_attribute != rdf:_1 && ?_identifier_attribute != rdf:type)
            }
        }
        BIND(
            IF(
                BOUND(?_identifier_element),
                IF(
                    !BOUND(?_identifier_type),
                    iri(CONCAT(str(haObjId:), ?identifier)),
                    ?_null_identifier
                ),
                ?_null_work
            )
        as ?work)
        BIND(
            IF(
                BOUND(?_identifier_element),
                IF(
                    !BOUND(?_identifier_type),
                    iri(CONCAT(str(haObj:), MD5(?identifier))),
                    ?_null_identifier_iri
                ),
                ?_null_identifier_iri_2
            )
        as ?identifier_iri)

        # mods:mods/mods:recordInfo/mods:recordIdentifier
        OPTIONAL {
            ?root ?root_list_recordInfo ?_recordInfo_element .
            ?_recordInfo_element a mods:recordInfo ;
            OPTIONAL {
                ?_recordInfo_element rdf:_1 ?recordInfo_identifier_element .
                OPTIONAL {
                    ?recordInfo_identifier_element rdf:_1 ?recordInfo_identifier ;
                        a mods:recordIdentifier .
                }
            }
        }
        BIND(
            IF(
                BOUND(?_recordInfo_element),
                iri(CONCAT(str(haObjId:), MD5(concat(?recordInfo_identifier, '_record')))),
                ?_null_record
            )
        as ?record_iri)
        BIND(
            IF(
                BOUND(?recordInfo_identifier),
                iri(CONCAT(str(haObjId:), MD5(?recordInfo_identifier))),
                ?_null_recordInfoId
            )
        as ?recordInfo_identifier_iri)
        # mods:mods/mods:titleInfo/mods:title
        OPTIONAL {
            ?root ?root_list_2 ?_titleInfo_element .
            ?_titleInfo_element a mods:titleInfo .
            OPTIONAL {
                ?_titleInfo_element rdf:_1 ?_title_element .
                OPTIONAL {
                    ?_title_element rdf:_1 ?title ;
                        a mods:title . 
                }
            }
            OPTIONAL {
                ?_titleInfo_element xyz:type ?title_info_type .
            }
            # mods:mods/mods:titleInfo[@type="alternative"]/@otherType
            OPTIONAL {
                ?_titleInfo_element xyz:otherType ?title_info_othertype .
            }
            OPTIONAL {
                ?_titleInfo_element ?_titleInfo_attribute ?_titleInfo_attr_value .
                FILTER(?_titleInfo_attribute != rdf:_1 
                    && ?_titleInfo_attribute != rdf:type 
                    && ?_titleInfo_attribute != xyz:type
                    && ?_titleInfo_attribute != xyz:otherType
                )
            }
            BIND(IF(
                EXISTS { 
                    ?_titleInfo_element ?_titleInfo_attributeX ?_titleInfo_attr_valueX .
                    FILTER(?_titleInfo_attributeX != rdf:_1 && ?_titleInfo_attributeX != rdf:type)
                    }, ?title, ?_null_1
                )
            AS ?altTitle)
            BIND(
                IF(
                    BOUND(?altTitle),
                    iri(CONCAT(str(haObjId:), MD5(?altTitle))),
                    ?_null_4
                )
            as ?altTitle_iri)
            BIND(IF(
                NOT EXISTS { 
                    ?_titleInfo_element ?_titleInfo_attributeX ?_titleInfo_attr_valueX .
                    FILTER(?_titleInfo_attributeX != rdf:_1 && ?_titleInfo_attributeX != rdf:type)
                    }, ?title, ?_null_2
                )
            AS ?mainTitle)
            BIND(
                IF(
                    BOUND(?mainTitle),
                    iri(CONCAT(str(haObjId:), MD5(?mainTitle))),
                    ?_null_5
                )
            as ?mainTitle_iri)
        }
        # mods:mods/mods:language
        OPTIONAL {
            ?root ?root_list_lang ?_language_element .
            ?_language_element a mods:language ;
            OPTIONAL {
                ?_language_element rdf:_1 ?_language_term .
                OPTIONAL {
                    ?_language_term rdf:_1 ?language ;
                        a mods:languageTerm . 
                }
                OPTIONAL {
                    ?_language_term xyz:type ?_language_term_type .
                }
            }
            OPTIONAL {
                ?_language_element ?_language_attribute ?_abstract_attr_value .
                FILTER(?_language_attribute != rdf:_1 && ?_language_attribute != rdf:type)
            }
        }
        BIND(
            IF(
                BOUND(?_language_element),
                iri(CONCAT(str(haObjId:), MD5(?language))),
                ?_null_lang
            )
        as ?language_iri)
        BIND(
            IF(
                BOUND(?_language_element),
                COALESCE(
                    IF(?_language_term_type = "code", bf:Language, 1/0),
                    IF(!BOUND(?_language_term_type), CONCAT("Missing LanguageTerm @type"), 1/0),
                    CONCAT("Unexpected LanguageTerm @type: ", ?_language_term_type)
                ),
                ?_null_lang_type
            )
        as ?language_type)
        # mods:mods/mods:typeOfResource
        OPTIONAL {
            ?root ?root_list_3 ?_typeOfResource_element .
            ?_typeOfResource_element a mods:typeOfResource ;
                rdf:_1 ?typeOfResource .
            # mods:mods/mods:typeOfResource/@manuscript
            OPTIONAL {
                ?_typeOfResource_element xyz:manuscript ?_is_manuscript .
            }
            OPTIONAL {
                ?_typeOfResource_element ?_typeOfResource_attribute ?_typeOfResource_attr_value .
                FILTER(?_typeOfResource_attribute != rdf:_1
                    && ?_typeOfResource_attribute != rdf:type
                )
            }
            
        }
        BIND(
            COALESCE(
                IF(lcase(?typeOfResource) = "newspaper edition", haDes:NewspaperIssue, 1/0),
                IF(lcase(?typeOfResource) = "notated music", haDes:NotatedMusic, 1/0),
                IF(lcase(?typeOfResource) = "text", haDes:Text, 1/0),
                IF(!BOUND(?typeOfResource), "No mods:typeOfResource", 1/0),
                CONCAT("Unexpected mods:typeOfResource: ", ?typeOfResource)
            )
        as ?extraType)
        BIND(
            COALESCE(
                IF(lcase(?_is_manuscript) = "yes", bf:Manuscript, 1/0),
                IF(BOUND(?_is_manuscript), CONCAT("Unexpected @manuscript value on mods:typeOfResource: ", ?_is_manuscript), 1/0),
                ?_null_manuscript
            )
            
        as ?manuscript_type)
        # mods:mods/mods:abstract
        OPTIONAL {
            ?root ?root_list_4 ?_abstract_element .
            ?_abstract_element a mods:abstract ;
                rdf:_1 ?abstract .
            OPTIONAL {
                ?_abstract_element ?_abstract_attribute ?_abstract_attr_value .
                FILTER(?_abstract_attribute != rdf:_1 && ?_abstract_attribute != rdf:type)
            }
        }
        BIND(
            IF(
                BOUND(?_abstract_element),
                iri(CONCAT(str(haObjId:), MD5(?abstract))),
                ?_null_5
            )
        as ?abstract_iri)
        # mods:mods/mods:genre
        OPTIONAL {
            ?root ?root_list_5 ?_genre_element .
            ?_genre_element a mods:genre ;
                rdf:_1 ?genre .
            OPTIONAL {
                ?_genre_element xyz:authority ?genre_source .
            }
            OPTIONAL {
                ?_genre_element xyz:authorityURI ?_genre_source_uri .
            }
            OPTIONAL {
                ?_genre_element ?_genre_attribute ?_genre_attr_value .
                FILTER(?_genre_attribute != rdf:_1 && ?_genre_attribute != rdf:type && ?_genre_attribute != xyz:authority && ?_genre_attribute != xyz:authorityURI)
            }
        }
        BIND(
            IF(
                BOUND(?_genre_element),
                iri(CONCAT(str(haObjId:), MD5(?genre))),
                ?_null_6
            )
        as ?genre_iri)
        BIND(
            IF(
                BOUND(?_genre_element),
                IF(
                    BOUND(?_genre_source_uri),
                    iri(?_genre_source_uri),
                    IF(
                        BOUND(?genre_source),
                        iri(CONCAT(str(haObjId:), MD5(?genre_source))),
                        "No mods:genre/@authority or @authorityURI found."
                    )
                ),
                ?_null_11
            )
        as ?genre_source_iri)
        # mods:mods/mods:subject/mods:topic
        OPTIONAL {
            ?root ?root_list_6 ?_subject_element .
            ?_subject_element a mods:subject .
            OPTIONAL {
                ?_subject_element ?_subject_element_topic_prop ?_topic_element .
                FILTER(STRSTARTS(str(?_subject_element_topic_prop), str(rdf:_)))
                OPTIONAL {
                    ?_topic_element rdf:_1 ?topic .
                }
            }
            OPTIONAL {
                ?_subject_element ?_subject_attribute ?_subject_attr_value .
                FILTER(!STRSTARTS(str(?_subject_element_topic_prop), str(rdf:_)) && ?_subject_attribute != rdf:type)
            }
        }
        BIND(
            IF(
                BOUND(?_topic_element),
                iri(CONCAT(str(haObjId:), MD5(?topic))),
                ?_null_7
            )
        as ?topic_iri)
        # mods:mods/mods:note[@type="license"]
        OPTIONAL {
            ?root ?root_list_note ?_note_element .
            ?_note_element a mods:note .
            OPTIONAL {
                ?_note_element rdf:_1 ?note .
            }
            OPTIONAL {
                ?_note_element xyz:type ?note_type .
            }
            OPTIONAL {
                ?_note_element ?_license_attribute ?_license_attr_value .
                FILTER(?_license_attribute != rdf:_1 && ?_license_attribute != rdf:type && ?_license_attribute != xyz:type)
            }
        }
        BIND(
            IF(
                BOUND(?_note_element),
                IF(BOUND(?note_type) && ?note_type = "license", 
                    iri(CONCAT(str(haObjId:), ?note)),
                    iri(CONCAT(str(haObjId:), MD5(?note)))
                ),
                ?_null_27
            )
        as ?license_iri)
        BIND(
            COALESCE(
                IF(?note_type = "license", bf:UsageAndAccessPolicy, 1/0),
                IF(!BOUND(?note_type), "No @type on mods:note.", 1/0),
                CONCAT("Unexpected @type on mods:note: ", ?note_type)
            )
        as ?license_type)
        # mods:mods/mods:name
        OPTIONAL {
            ?root ?root_list_7 ?_name_element .
            ?_name_element a mods:name ;
            BIND(
                strUUID()
            as ?_name_uuid)
            OPTIONAL {
                ?_name_element xyz:type ?_name_type .
            }
            BIND(
                COALESCE(
                    IF(?_name_type = "personal", bf:Person, 1/0),
                    IF(?_name_type = "corporate", bf:Organization, 1/0),
                    IF(!BOUND(?_name_type), "Missing @type on mods:name", 1/0),
                    CONCAT("Unexpected @type of mods:name: ", ?_name_type)
                )
            as ?agent_type)
            OPTIONAL {
                ?_name_element ?_name_element_namePart_prop ?_namePart_element .
                ?_namePart_element a mods:namePart .
                OPTIONAL {
                    ?_namePart_element rdf:_1 ?namePart .
                }
                OPTIONAL {
                    ?_namePart_element xyz:type ?_namePart_type .
                }
            }
            BIND(
                COALESCE(
                    IF(?_namePart_type = "family", schema:familyName, 1/0),
                    IF(?_namePart_type = "given", schema:givenName, 1/0),
                    IF(!BOUND(?_namePart_type), rdfs:label, 1/0),
                    iri(CONCAT(str(haSip:), ?_namePart_type))
                )
            AS ?namePart_prop)
            OPTIONAL {
                ?_name_element ?_name_element_role_prop ?_role_element .
                ?_role_element a mods:role .
                OPTIONAL {
                    ?_role_element ?_role_element_roleTerm_prop ?_roleTerm_element .
                    ?_roleTerm_element a mods:roleTerm .
                    OPTIONAL {
                        ?_roleTerm_element rdf:_1 ?roleTerm .
                    }
                    OPTIONAL {
                        ?_roleTerm_element xyz:type ?_roleTerm_type .
                    }
                }
            }
            BIND(
                COALESCE(
                    IF(?_roleTerm_type = "text", rdfs:label, 1/0),
                    IF(!BOUND(?_roleTerm_type), ?_null_10, 1/0),
                    iri(CONCAT(str(haSip:), ?_roleTerm_type))
                )
            AS ?roleTerm_prop)
            BIND(
                IF(
                    BOUND(?_name_element),
                    iri(CONCAT(str(haObjId:), MD5(?_name_uuid))),
                    ?_null_name
                )
            as ?contribution_iri)
            BIND(
                IF(
                    BOUND(?_namePart_element),
                    iri(CONCAT(str(haObjId:), MD5(CONCAT(?_name_uuid, "_agent")))),
                    ?_null_agent
                )
            as ?agent_iri)
            BIND(
                IF(
                    BOUND(?_role_element),
                    iri(CONCAT(str(haObjId:), MD5(CONCAT(?_name_uuid, "_role")))),
                    ?_null_role
                )
            as ?role_iri)
        }
        # mods:mods/mods:originInfo
        OPTIONAL{
            ?_originInfo_element a mods:originInfo .
            BIND(
                strUUID()
            as ?_originInfo_uuid)
            BIND(
                IF(
                    BOUND(?_originInfo_element),
                    iri(CONCAT(str(haObjId:), MD5(?_originInfo_uuid))),
                    ?_null_12
                )
            as ?provision_activity_iri)
            # mods:mods/mods:originInfo/@eventType
            OPTIONAL {
                ?_originInfo_element xyz:eventType ?_originInfo_eventType .
            }
            BIND(
                COALESCE(
                    IF(?_originInfo_eventType = "publication", bf:Publication, 1/0),
                    IF(!BOUND(?_originInfo_eventType), bf:ProvisionActivity, 1/0),
                    CONCAT("Unexpected @eventType of mods:originInfo: ", ?_originInfo_eventType)
                )
            as ?provisionActivity_type)
            # mods:mods/mods:originInfo/mods:publisher
            OPTIONAL {
                ?_originInfo_element ?_originInfo_element_publisher_prop ?_publisher_element .
                ?_publisher_element a mods:publisher .
                OPTIONAL {
                    ?_publisher_element rdf:_1 ?publisher .
                }
            }
            BIND(
                IF(
                    BOUND(?_publisher_element),
                    iri(CONCAT(str(haObjId:), MD5(CONCAT(?_originInfo_uuid, "_agent")))),
                    ?_null_publisher
                )
            as ?prov_agent_iri)
            # mods:mods/mods:originInfo/mods:dateCreated
            OPTIONAL {
                ?_originInfo_element ?_originInfo_element_dateCreated_prop ?_dateCreated_element .
                ?_dateCreated_element a mods:dateCreated .
                OPTIONAL {
                    ?_dateCreated_element rdf:_1 ?_dateCreated .
                }
                OPTIONAL {
                    ?_dateCreated_element xyz:encoding ?_dateCreated_encoding .
                }
                BIND(
                    IF(
                        BOUND(?_dateCreated_encoding) && ?_dateCreated_encoding = "edtf",
                        STRDT(?_dateCreated, edtf:EDTF),
                        ?_dateCreated
                    )
                AS ?dateCreated)
            }
            # mods:mods/mods:originInfo/mods:dateIssued
            OPTIONAL {
                ?_originInfo_element ?_originInfo_element_dateIssued_prop ?_dateIssued_element .
                ?_dateIssued_element a mods:dateIssued .
                OPTIONAL {
                    ?_dateIssued_element rdf:_1 ?_dateIssued .
                }
                OPTIONAL {
                    ?_dateIssued_element xyz:encoding ?_dateIssued_encoding .
                }
                BIND(
                    IF(
                        BOUND(?_dateIssued_encoding) && ?_dateIssued_encoding = "edtf",
                        STRDT(?_dateIssued, edtf:EDTF),
                        ?_dateIssued
                    )
                AS ?dateIssued)
            }
            # mods:mods/mods:originInfo/mods:place
            OPTIONAL {
                ?_originInfo_element ?_originInfo_element_place_prop ?_place_element .
                ?_place_element a mods:place .
                BIND(
                    strUUID()
                as ?_place_uuid)
                OPTIONAL {
                    # mods:mods/mods:originInfo/mods:place/mods:placeTerm[@type="text"]
                    ?_place_element ?_place_element_placeTerm_prop ?_placeTerm_element .
                    ?_placeTerm_element a mods:placeTerm .
                    OPTIONAL {
                        ?_placeTerm_element rdf:_1 ?placeTerm .
                        OPTIONAL {
                            ?_placeTerm_element xyz:type ?_placeTerm_type .
                        }
                        OPTIONAL {
                            ?_placeTerm_element xyz:authority ?place_source .
                        }
                        OPTIONAL {
                            ?_placeTerm_element xyz:authorityURI ?_placeTerm_authorityURI .
                        }
                        BIND(
                            IF(
                                BOUND(?_placeTerm_type),
                                IF(
                                    ?_placeTerm_type = "text",
                                    rdfs:label,
                                    IF(
                                        ?_placeTerm_type = "code",
                                        bf:code,
                                        iri(CONCAT(str(haSip:), ?_placeTerm_type))
                                    )
                                ),
                                ?_null_14
                            )
                        as ?placeTerm_prop)
                    }
                }
                OPTIONAL {
                    ?_place_element ?_place_attribute ?_place_attr_value .
                    FILTER(!STRSTARTS(str(?_place_attribute), str(rdf:_)) && ?_place_attribute != rdf:type)
                }
            }
            BIND(
                IF(
                    BOUND(?_place_element),
                    iri(CONCAT(str(haObjId:), MD5(concat(?_place_uuid, "_place")))),
                    ?_null_13
                )
            as ?place_iri)
            BIND(
                IF(
                    BOUND(?_placeTerm_element) && ?_placeTerm_type = "code",
                    IF(
                        BOUND(?_placeTerm_authorityURI),
                        iri(?_placeTerm_authorityURI),
                        IF(
                            BOUND(?place_source),
                            iri(CONCAT(str(haSip:), MD5(?place_source))),
                            "No mods:placeTerm/@authorityURI or mods:placeTerm/@authority found"
                        )
                    ),
                    ?_null_19
                )
            as ?place_source_iri)
            # mods:mods/mods:originInfo/mods:issuance
            OPTIONAL {
                ?_originInfo_element ?_originInfo_element_issuance_prop ?_issuance_element .
                ?_issuance_element a mods:issuance .
                OPTIONAL {
                    ?_issuance_element rdf:_1 ?issuance .
                }
                OPTIONAL {
                    # TODO add to resource
                    ?_issuance_element ?_issuance_attribute ?_issuance_attr_value .
                    FILTER(!?_issuance_attribute != rdf:_1 && ?_issuance_attribute != rdf:type)
                }
            }
        }
        # mods:mods/mods:physicalDescription
        OPTIONAL {
            ?_physicalDescription_element a mods:physicalDescription .
            BIND(
                strUUID()
            as ?_physicalDescription_uuid)
        }
        OPTIONAL {
            # mods:mods/mods:physicalDescription/mods:note
            OPTIONAL {
                ?_physicalDescription_element ?_physicalDescription_note_prop ?_physicalDescription_note_element .
                ?_physicalDescription_note_element a mods:note .
                OPTIONAL {
                    ?_physicalDescription_note_element rdf:_1 ?physDes_note .
                }
                OPTIONAL {
                    ?_physicalDescription_note_element xyz:type ?physDes_note_type
                }
            }
            MINUS {?_physicalDescription_note_element xyz:type "statement of responsibility"}
            
            BIND(
                IF(
                    BOUND(?physDes_note),
                    iri(CONCAT(str(haObjId:), MD5(?physDes_note))),
                    ?_null_physDes_note
                )
            as ?physDes_note_iri)
            BIND(
                IF(
                    BOUND(?physDes_note),
                    COALESCE(
                        IF(!BOUND(?physDes_note_type), "Missing @type on mods:physicalDescription/mods:note", 1/0),
                        IF(?physDes_note_type in ("condition"), bf:Note, 1/0),
                        CONCAT("Unkown @type on mods:physicalDescription/mods:note: ", ?physDes_note_type)
                    ),
                    ?_null_physDes_note_type
                )
            as ?physDes_note_type_iri)
            
            
            
        }
        OPTIONAL {
            OPTIONAL {
                ?_physicalDescription_element ?_physicalDescription_note_sor_prop ?_physicalDescription_note_sor_element .
                ?_physicalDescription_note_sor_element a mods:note .
                OPTIONAL {
                    ?_physicalDescription_note_sor_element rdf:_1 ?physDes_note_sor .
                }
                ?_physicalDescription_note_sor_element xyz:type "statement of responsibility"
            }
            BIND(
                IF(
                    BOUND(?physDes_note_sor),
                    ?physDes_note_sor,
                    ?_null_physDes_note_resp
                )
            as ?responsibilityStatement)
        }
        OPTIONAL {
            # mods:mods/mods:physicalDescription/mods:form
            OPTIONAL {
                ?_physicalDescription_element ?_physicalDescription_element_form_prop ?_form_element .
                ?_form_element a mods:form .
                OPTIONAL {
                    ?_form_element rdf:_1 ?form .
                }
                OPTIONAL {
                    ?_form_element xyz:authority ?carrier_source .
                }
                OPTIONAL {
                    ?_form_element xyz:authorityURI ?_form_authorityURI .
                }
                OPTIONAL {
                    ?_form_element xyz:type ?_form_authorityType .
                }
                OPTIONAL {
                    ?_form_element ?_form_attribute ?_form_attr_value .
                    FILTER(!?_form_attribute != rdf:_1 && ?_form_attribute != rdf:type)
                }
            }
            MINUS { ?_form_element xyz:type "schrijfstoffen" }
            MINUS { ?_form_element xyz:type "papiersoort" }
            BIND(
                IF(
                    BOUND(?_form_element),
                    IF(
                        BOUND(?_form_authorityURI),
                        iri(?_form_authorityURI),
                        IF(
                            BOUND(?carrier_source),
                            iri(CONCAT(str(haSip:), MD5(?carrier_source))),
                            "No mods:form authority"
                        )
                    ),
                    ?_null_18
                )
            as ?carrier_source_iri)
        }
        OPTIONAL {
            OPTIONAL {
                ?_physicalDescription_element ?_physicalDescription_element_form_schrijfstoffen_prop ?_form_schrijfstoffen_element .
                ?_form_schrijfstoffen_element a mods:form .
                ?_form_schrijfstoffen_element xyz:type "schrijfstoffen" .
                OPTIONAL {
                    ?_form_schrijfstoffen_element rdf:_1 ?form_schrijfstoffen .
                    OPTIONAL {
                        ?_form_schrijfstoffen_element xyz:authority ?_form_schrijfstoffen_source .
                    }
                    OPTIONAL {
                        ?_form_schrijfstoffen_element xyz:authorityURI ?_form_schrijfstoffen_authorityURI .
                    }
                }
            }
            BIND(
                IF(
                    BOUND(?_form_schrijfstoffen_element),
                    iri(CONCAT(str(haObjId:), MD5(?form_schrijfstoffen))),
                    ?_null_21
                )
            as ?applied_material_iri)
            BIND(
                IF(
                    BOUND(?_form_schrijfstoffen_element),
                    IF(
                        BOUND(?_form_schrijfstoffen_authorityURI),
                        iri(?_form_schrijfstoffen_authorityURI),
                        IF(
                            BOUND(?_form_schrijfstoffen_source),
                            iri(CONCAT(str(haSip:), MD5(?_form_schrijfstoffen_source))),
                            "No mods:form authority"
                        )
                    ),
                    ?_null_schrijfstoffen_source_iri
                )
            as ?applied_material_source_iri)
        }
        OPTIONAL {
            OPTIONAL {
                ?_physicalDescription_element ?_physicalDescription_element_form_papiersoort_prop ?_form_papiersoort_element .
                ?_form_papiersoort_element a mods:form .
                ?_form_papiersoort_element xyz:type "papiersoort" .
                OPTIONAL {
                    ?_form_papiersoort_element rdf:_1 ?form_papiersoort .
                    OPTIONAL {
                        ?_form_papiersoort_element xyz:authority ?_form_papiersoort_source .
                    }
                    OPTIONAL {
                        ?_form_papiersoort_element xyz:authorityURI ?_form_papiersoort_authorityURI .
                    }

                }
            }
            BIND(
                IF(
                    BOUND(?_form_papiersoort_element),
                    iri(CONCAT(str(haObjId:), MD5(?form_papiersoort))),
                    ?_null_21
                )
            as ?base_material_iri)
            BIND(
            IF(
                BOUND(?_form_papiersoort_element),
                IF(
                    BOUND(?_form_papiersoort_authorityURI),
                    iri(?_form_papiersoort_authorityURI),
                    IF(
                        BOUND(?_form_papiersoort_source),
                        iri(CONCAT(str(haSip:), MD5(?_form_papiersoort_source))),
                        "No mods:form authority"
                    )
                ),
                ?_null_papiersoort_source_iri
                )
            as ?base_material_source_iri)
        }
        OPTIONAL {
            # mods:mods/mods:physicalDescription/mods:extent
            OPTIONAL {
                ?_physicalDescription_element ?_physicalDescription_element_extent_prop ?_extent_element .
                ?_extent_element a mods:extent .
                OPTIONAL {
                    ?_extent_element rdf:_1 ?extent .
                }
                OPTIONAL {
                    ?_extent_element xyz:unit ?extent_unit .
                }
                OPTIONAL {
                    ?_extent_element ?_extent_attribute ?_extent_attr_value .
                    FILTER(!?_extent_attribute != rdf:_1 && ?_extent_attribute != rdf:type && ?_extent_attribute != xyz:unit)
                }
            }
            MINUS { ?_extent_element xyz:unit "pages"}
            
            BIND(
                IF(
                    BOUND(?extent),
                    COALESCE(
                        iri(CONCAT(str(haObjId:), MD5(?extent)))
                    ),
                    ?_null_extent
                )
            as ?extent_iri)
            BIND(
                IF(
                    BOUND(?extent),
                    COALESCE(
                        IF(!BOUND(?extent_unit), "Missing @unit on mods:physicalDescription/mods:extent", 1/0),
                        iri(CONCAT(str(haObjId:), MD5(?extent_unit)))
                    ),
                    ?_null_unit
                )
            as ?extent_unit_iri)
            
        }
        OPTIONAL {
            OPTIONAL {
                ?_physicalDescription_element ?_physicalDescription_element_extent_pages_prop ?_extent_pages_element .
                ?_extent_pages_element a mods:extent .
                ?_extent_pages_element xyz:unit "pages" .
                OPTIONAL {
                    ?_extent_pages_element rdf:_1 ?extent_pages .
                }
            }
            BIND(
                IF(
                    BOUND(?extent_pages),
                    STRDT(?extent_pages, xsd:integer),
                    ?_null_number_of_pages
                )
            as ?number_of_pages)
        }
        BIND(
            IF(
                BOUND(?_physicalDescription_element),
                iri(CONCAT(str(haObjId:), MD5(concat(?_physicalDescription_uuid, "_carrier")))),
                ?_null_17
            )
        as ?carrier_iri)
        # mods:mods/mods:relatedItem
        OPTIONAL {
            ?_relatedItem_element a mods:relatedItem .
            BIND(
                strUUID()
            as ?_relatedItem_uuid)
            # mods:mods/mods:relatedItem[@type]
            OPTIONAL {
                ?_relatedItem_element xyz:type ?relatedItem_type .
            }
            # mods:mods/mods:relatedItem/mods:identifier
            OPTIONAL {
                ?_relatedItem_element ?_relatedItem_element_identifier_prop ?_relatedItem_identifier_element .
                ?_relatedItem_identifier_element a mods:identifier .
                OPTIONAL {
                    OPTIONAL {
                        ?_relatedItem_identifier_element rdf:_1 ?relatedItem_identifier .
                        OPTIONAL {
                            ?_relatedItem_identifier_element xyz:type ?_relatedItem_identifier_type .
                        }
                        OPTIONAL {
                            ?_relatedItem_identifier_element xyz:typeURI ?_relatedItem_identifier_source .
                        }
                    }
                    OPTIONAL {
                        # TODO add to resource
                        ?_relatedItem_identifier_element ?_relatedItem_identifier_attribute ?_relatedItem_identifier_attr_value .
                        FILTER(!?_relatedItem_identifier_attribute != rdf:_1 && ?_relatedItem_identifier_attribute != rdf:type)
                    }
                }
            }
            # mods:mods/mods:relatedItem[@type="series"]/mods:titleInfo/mods:title
            OPTIONAL {
                ?_relatedItem_element ?_relatedItem_element_titleInfo_prop ?_relatedItem_titleInfo_element .
                ?_relatedItem_titleInfo_element a mods:titleInfo .
                OPTIONAL {
                    ?_relatedItem_titleInfo_element rdf:_1 ?_relatedItem_title_element .
                    OPTIONAL {
                        ?_relatedItem_title_element rdf:_1 ?relatedItem_title ;
                            a mods:title . 
                    }
                }
            }
            BIND(IF(
                NOT EXISTS { 
                    ?_relatedItem_titleInfo_element ?_relatedItem_titleInfo_attributeX ?_relatedItem_titleInfo_attr_valueX .
                    FILTER(?_relatedItem_titleInfo_attributeX != rdf:_1 && ?_relatedItem_titleInfo_attributeX != rdf:type)
                    }, ?relatedItem_title, ?_null_2
                )
            AS ?mainRelatedItemTitle)
            BIND(
                IF(
                    BOUND(?mainRelatedItemTitle),
                    iri(CONCAT(str(haObjId:), MD5(?mainRelatedItemTitle))),
                    ?_null_relitemtitle
                )
            as ?mainRelatedItemTitle_iri)
            # mods:mods/mods:relatedItem[@type="series"]/mods:originInfo/mods:dateIssued[@encoding="edtf"]
            # TODO
        }
        BIND(
            IF(
                BOUND(?_relatedItem_identifier_element),
                COALESCE(
                    IF(?_relatedItem_identifier_type = "abraham_uri",
                        iri(?relatedItem_identifier),
                        1/0
                    ),
                    IF(?_relatedItem_identifier_type = "abraham_id",
                        iri(concat("https://anet.be/record/opacbnc/", ?relatedItem_identifier, "/N")),
                        1/0
                    ),
                    ?_null_abraham
                ),
                ?_null_20
            )
        as ?abraham_iri)
        BIND(
            IF(
                BOUND(?_relatedItem_identifier_element),
                COALESCE(
                    IF(?_relatedItem_identifier_type IN ("number", "page", "MEEMOO-LOCAL-ID"),
                        iri(CONCAT(str(haObjId:), MD5(?relatedItem_identifier))),
                        1/0
                    ),
                    IF(!BOUND(?_relatedItem_identifier_type),
                        "Missing @type on mods:relatedItem/mods:identifier",
                        1/0
                    ),
                    IF(?_relatedItem_identifier_type NOT IN ("number", "page", "abraham_uri", "abraham_id"),
                        concat("Unexpected @type on mods:relatedItem/mods:identifier: ", ?_relatedItem_identifier_type), 
                        ?_null_relitemid
                    )
                ),
                ?_null_20
            )
        as ?relatedItem_identifier_iri)
        BIND(
            IF(
                BOUND(?_relatedItem_element),
                iri(CONCAT(str(haObjId:), MD5(concat(?_relatedItem_uuid, "_relatedItem")))),
                ?_null_19
            )
        as ?relatedItem_iri)
        BIND(
            IF(
                BOUND(?_relatedItem_element),
                IF(
                    BOUND(?relatedItem_type) && ?relatedItem_type = "series",
                    bf:Series,
                    IF(
                        !BOUND(?relatedItem_type),
                        bf:Work,
                        concat("Unexpected @type on mods:relatedItem: ", ?relatedItem_type)
                    )
                ),
                ?_null_26
            )
        as ?relatedItem_type_iri)

        BIND(
            IF(
                BOUND(?_relatedItem_element),
                IF(
                    BOUND(?relatedItem_type) && ?relatedItem_type = "series",
                    bf:hasSeries,
                    IF(
                        !BOUND(?relatedItem_type),
                        bf:relatedTo,
                        concat("Unexpected @type on mods:relatedItem: ", ?relatedItem_type)
                    )
                ),
                ?_null_28
            )
        as ?relatedItem_prop_iri)
        
        BIND(
            IF(
                BOUND(?_relatedItem_identifier_element),
                IF(
                    ?_relatedItem_identifier_type = "abraham_id",
                    ?relatedItem_identifier,
                    ?_null_23
                ),
                ?_null_24
            )
        as ?abraham_id)
        BIND(
            IF(
                BOUND(?_relatedItem_identifier_element),
                IF(?_relatedItem_identifier_type NOT IN ("abraham_uri", "abraham_id"),
                    ?_relatedItem_identifier_type,
                    ?_null_relitemid_type
                ),
                ?_null_22
            )
        as ?relatedItem_identifier_type)
        
        BIND(
            IF(
                BOUND(?_relatedItem_identifier_element),
                IF(
                    BOUND(?_relatedItem_identifier_source),
                    iri(?_relatedItem_identifier_source),
                    IF(
                        ?_relatedItem_identifier_type = "abraham_uri" || ?_relatedItem_identifier_type = "abraham_id",
                        iri("https://anet.be"),
                        ?_null_relItemid_source
                    )
                ),
                ?_null_22
            )
        as ?abraham_source_iri)
        BIND(
            IF(
                str(?abraham_source_iri) = "https://anet.be",
                "Abraham. Catalogus van Belgische kranten",
                ?_null_21
            )
        as ?abraham_source_label)
    }
}
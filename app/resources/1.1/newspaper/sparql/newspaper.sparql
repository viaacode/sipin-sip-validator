PREFIX premis: <http://www.loc.gov/premis/rdf/v3/> 
PREFIX dct: <http://purl.org/dc/terms/> 
PREFIX sh: <http://www.w3.org/ns/shacl#> 
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
PREFIX skos: <http://www.w3.org/2004/02/skos/core#> 
PREFIX owl: <http://www.w3.org/2002/07/owl#> 
PREFIX schema: <https://schema.org/> 
PREFIX pav: <http://purl.org/pav/>
PREFIX haObj: <https://data.hetarchief.be/ns/object/> 
PREFIX haObjId: <https://data.hetarchief.be/id/object/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
PREFIX edtf: <http://id.loc.gov/datatypes/edtf/> 
PREFIX mods: <http://www.loc.gov/mods/rdf/v1#> 
PREFIX madsrdf: <http://www.loc.gov/mads/rdf/v1#> 
PREFIX edm: <http://www.europeana.eu/schemas/edm/> 
PREFIX bf: <http://id.loc.gov/ontologies/bibframe/> 
PREFIX mods: <http://www.loc.gov/mods/v3#> 
PREFIX fx: <http://sparql.xyz/facade-x/ns/> 
PREFIX xyz: <http://sparql.xyz/facade-x/data/> 
PREFIX haNePa: <https://data.hetarchief.be/ns/newspaper/>
PREFIX haNePaId: <https://data.hetarchief.be/id/newspaper/>
PREFIX haSip: <https://data.hetarchief.be/ns/sip/> 


CONSTRUCT {
    ?work a bf:Work, ?extraType ;
        bf:identifiedBy ?identifier_iri ;
        rdfs:label ?mainTitle ;
        bf:title ?altTitle_iri, ?mainTitle_iri ;
        bf:genreForm ?genre_iri ;
        bf:summary ?abstract_iri ;
        bf:subject ?topic_iri ;
        bf:contribution ?contribution_iri ;
        bf:originDate ?dateCreated ;
        bf:provisionActivity ?publication_iri ;
        bf:issuance ?issuance ;
        bf:extent ?extent_iri ;
        bf:carrier ?carrier_iri .
    
    ?identifier_iri a bf:Identifier ;
        rdfs:label ?identifier ;
        ?_identifier_attribute ?_identifier_attr_value .

    ?mainTitle_iri a bf:Title ;
        rdfs:label ?mainTitle ;
        ?_titleInfo_attribute ?_titleInfo_attr_value .

    ?altTitle_iri a bf:VariantTitle ;
        rdfs:label ?altTitle ;
        bf:variantType ?title_info_type ;
        ?_titleInfo_attribute ?_titleInfo_attr_value .

    ?genre_iri a bf:GenreForm ;
        rdfs:label ?genre ;
        bf:source ?genre_source_iri ;
        ?_genre_attribute ?_genre_attr_value .

    ?genre_source_iri a bf:Source ;
        rdfs:label ?genre_source .

    ?abstract_iri a bf:Summary ;
        rdfs:label ?abstract ;
        ?_abstract_attribute ?_abstract_attr_value .

    ?topic_iri a bf:Topic ;
        rdfs:label ?topic ;
        ?_subject_attribute ?_subject_attr_value .

    ?contribution_iri a bf:Contribution ;
        bf:agent ?agent_iri ;
        bf:role ?role_iri .

    ?agent_iri a ?agent_type ;
        ?namePart_prop ?namePart .

    ?role_iri a bf:Role ;
        ?roleTerm_prop ?roleTerm .

    ?publication_iri a bf:Publication ;
        bf:place ?place_iri ;
        # bf:agent ?agent_iri ;
        bf:date ?dateIssued .

    ?place_iri a bf:Place ;
        ?placeTerm_prop ?placeTerm ;
        bf:source ?place_source_iri ;
        ?_place_attribute ?_place_attr_value .

    ?place_source_iri a bf:Source ;
        rdfs:label ?place_source .

    ?extent_iri a bf:Extent ;
        rdfs:label ?extent ;
        bf:unit ?extent_unit_iri ;
        ?_extent_attribute ?_extent_attr_value .

    ?extent_unit_iri a bf:Unit ;
        rdfs:label ?extent_unit .

    ?carrier_iri a bf:Carrier ;
        rdfs:label ?form ;
        bf:source ?carrier_source_iri ;
        ?_carrier_attribute ?_carrier_attr_value .

    ?carrier_source_iri a bf:Source ;
        rdfs:label ?carrier_source .
}
WHERE {
    SERVICE <x-sparql-anything:location=/home/lennert/sipin-sip-validator/mods.xml> {
        OPTIONAL {
            ?modsElement a mods:mods .
            OPTIONAL {
                ?modsElement xyz:version ?modsVersion .
            }
        }
        ?root a fx:root .
        # mods:mods/mods:identifier[not(@*)]
        OPTIONAL {
            ?root ?root_list_1 ?_identifier_element .
            ?_identifier_element a mods:identifier ;
                rdf:_1 ?identifier .
            OPTIONAL {
                ?_identifier_element ?_identifier_attribute ?_identifier_attr_value .
                FILTER(?_identifier_attribute != rdf:_1 && ?_identifier_attribute != rdf:type)
            }
        }
        BIND(
            IF(
                BOUND(?_identifier_element),
                iri(CONCAT(str(haObjId:), ?identifier)),
                "No mods:identifier found"
            )
        as ?work)
        BIND(
            IF(
                BOUND(?_identifier_element),
                iri(CONCAT(str(haObjId:), MD5(?identifier))),
                ?_null_3
            )
        as ?identifier_iri)
        # mods:mods/mods:titleInfo/mods:title
        OPTIONAL {
            ?root ?root_list_2 ?_titleInfo_element .
            ?_titleInfo_element a mods:titleInfo .
            OPTIONAL {
                ?_titleInfo_element rdf:_1 ?_title_element .
                OPTIONAL {
                    ?_title_element rdf:_1 ?title .
                }
            }
            OPTIONAL {
                ?_titleInfo_element xyz:type ?title_info_type .
            }
            OPTIONAL {
                ?_titleInfo_element ?_titleInfo_attribute ?_titleInfo_attr_value .
                FILTER(?_titleInfo_attribute != rdf:_1 && ?_titleInfo_attribute != rdf:type && ?_titleInfo_attribute != xyz:type)
            }
            BIND(IF(
                EXISTS { 
                    ?_titleInfo_element ?_titleInfo_attributeX ?_titleInfo_attr_valueX .
                    FILTER(?_titleInfo_attributeX != rdf:_1 && ?_titleInfo_attributeX != rdf:type)
                    }, ?title, ?_null_1
                )
            AS ?altTitle)
            BIND(
                IF(
                    BOUND(?altTitle),
                    iri(CONCAT(str(haObjId:), MD5(?altTitle))),
                    ?_null_4
                )
            as ?altTitle_iri)
            BIND(IF(
                NOT EXISTS { 
                    ?_titleInfo_element ?_titleInfo_attributeX ?_titleInfo_attr_valueX .
                    FILTER(?_titleInfo_attributeX != rdf:_1 && ?_titleInfo_attributeX != rdf:type)
                    }, ?title, ?_null_2
                )
            AS ?mainTitle)
            BIND(
                IF(
                    BOUND(?mainTitle),
                    iri(CONCAT(str(haObjId:), MD5(?mainTitle))),
                    ?_null_5
                )
            as ?mainTitle_iri)
        }
        # mods:mods/mods:typeOfResource
        OPTIONAL {
            ?root ?root_list_3 ?_typeOfResource_element .
            ?_typeOfResource_element a mods:typeOfResource ;
                rdf:_1 ?typeOfResource .
            OPTIONAL {
                ?_typeOfResource_element ?_typeOfResource_attribute ?_typeOfResource_attr_value .
                FILTER(?_typeOfResource_attribute != rdf:_1 && ?_typeOfResource_attribute != rdf:type)
            }
            BIND(
                IF(?typeOfResource = "newspaper edition", haNePa:NewspaperIssue, CONCAT("Wrong mods:typeOfResource: ", ?typeOfResource)) 
            as ?extraType)
        }
        # mods:mods/mods:abstract
        OPTIONAL {
            ?root ?root_list_4 ?_abstract_element .
            ?_abstract_element a mods:abstract ;
                rdf:_1 ?abstract .
            OPTIONAL {
                ?_abstract_element ?_abstract_attribute ?_abstract_attr_value .
                FILTER(?_abstract_attribute != rdf:_1 && ?_abstract_attribute != rdf:type)
            }
        }
        BIND(
            IF(
                BOUND(?_abstract_element),
                iri(CONCAT(str(haObjId:), MD5(?abstract))),
                ?_null_5
            )
        as ?abstract_iri)
        # mods:mods/mods:genre
        OPTIONAL {
            ?root ?root_list_5 ?_genre_element .
            ?_genre_element a mods:genre ;
                rdf:_1 ?genre .
            OPTIONAL {
                ?_genre_element xyz:authority ?genre_source .
            }
            OPTIONAL {
                ?_genre_element xyz:authorityURI ?_genre_source_uri .
            }
            OPTIONAL {
                ?_genre_element ?_genre_attribute ?_genre_attr_value .
                FILTER(?_genre_attribute != rdf:_1 && ?_genre_attribute != rdf:type && ?_genre_attribute != xyz:authority && ?_genre_attribute != xyz:authorityURI)
            }
        }
        BIND(
            IF(
                BOUND(?_genre_element),
                iri(CONCAT(str(haObjId:), MD5(?genre))),
                ?_null_6
            )
        as ?genre_iri)
        BIND(
            IF(
                BOUND(?_genre_element),
                IF(
                    BOUND(?_genre_source_uri),
                    iri(?_genre_source_uri),
                    IF(
                        BOUND(?genre_source),
                        iri(CONCAT(str(haObjId:), MD5(?genre_source))),
                        "No mods:genre/@authority or @authorityURI found."
                    )
                ),
                ?_null_11
            )
        as ?genre_source_iri)
        # mods:mods/mods:subject/mods:topic
        OPTIONAL {
            ?root ?root_list_6 ?_subject_element .
            ?_subject_element a mods:subject .
            OPTIONAL {
                ?_subject_element ?_subject_element_topic_prop ?_topic_element .
                FILTER(STRSTARTS(str(?_subject_element_topic_prop), str(rdf:_)))
                OPTIONAL {
                    ?_topic_element rdf:_1 ?topic .
                }
            }
            OPTIONAL {
                ?_subject_element ?_subject_attribute ?_subject_attr_value .
                FILTER(!STRSTARTS(str(?_subject_element_topic_prop), str(rdf:_)) && ?_subject_attribute != rdf:type)
            }
        }
        BIND(
            IF(
                BOUND(?_topic_element),
                iri(CONCAT(str(haObjId:), MD5(?topic))),
                ?_null_7
            )
        as ?topic_iri)
        # mods:mods/mods:name[@type="personal"]
        OPTIONAL {
            ?root ?root_list_7 ?_name_element .
            ?_name_element a mods:name ;
            BIND(
                strUUID()
            as ?_name_uuid)
            OPTIONAL {
                ?_name_element xyz:type ?_name_type .
            }
            BIND(
                IF(?_name_type = "personal", bf:Person, ?_null_8)
            as ?agent_type)
            OPTIONAL {
                ?_name_element ?_name_element_namePart_prop ?_namePart_element .
                ?_namePart_element a mods:namePart .
                OPTIONAL {
                    ?_namePart_element rdf:_1 ?namePart .
                }
                OPTIONAL {
                    ?_namePart_element xyz:type ?_namePart_type .
                }
            }
            BIND(
                COALESCE(
                    IF(?_namePart_type = "family", schema:familyName, 1/0),
                    IF(?_namePart_type = "given", schema:givenName, 1/0),
                    IF(!BOUND(?_namePart_type), ?_null_9, 1/0),
                    iri(CONCAT(str(haSip:), ?_namePart_type))
                )
            AS ?namePart_prop)
            OPTIONAL {
                ?_name_element ?_name_element_role_prop ?_role_element .
                ?_role_element a mods:role .
                OPTIONAL {
                    ?_role_element ?_role_element_roleTerm_prop ?_roleTerm_element .
                    ?_roleTerm_element a mods:roleTerm .
                    OPTIONAL {
                        ?_roleTerm_element rdf:_1 ?roleTerm .
                    }
                    OPTIONAL {
                        ?_roleTerm_element xyz:type ?_roleTerm_type .
                    }
                }
            }
            BIND(
                COALESCE(
                    IF(?_roleTerm_type = "text", rdfs:label, 1/0),
                    IF(!BOUND(?_roleTerm_type), ?_null_10, 1/0),
                    iri(CONCAT(str(haSip:), ?_roleTerm_type))
                )
            AS ?roleTerm_prop)
            BIND(
                IF(
                    BOUND(?_name_element),
                    iri(CONCAT(str(haObjId:), MD5(?_name_uuid))),
                    "none"
                )
            as ?contribution_iri)
            BIND(
                IF(
                    BOUND(?_namePart_element),
                    iri(CONCAT(str(haObjId:), MD5(CONCAT(?_name_uuid, "_agent")))),
                    "none"
                )
            as ?agent_iri)
            BIND(
                IF(
                    BOUND(?_role_element),
                    iri(CONCAT(str(haObjId:), MD5(CONCAT(?_name_uuid, "_role")))),
                    "none"
                )
            as ?role_iri)
        }
        # mods:mods/mods:originInfo
        OPTIONAL{
            ?_originInfo_element a mods:originInfo .
            BIND(
                strUUID()
            as ?_originInfo_uuid)
            BIND(
                IF(
                    BOUND(?_originInfo_element),
                    iri(CONCAT(str(haObjId:), MD5(?_originInfo_uuid))),
                    ?_null_12
                )
            as ?publication_iri)
            # mods:mods/mods:originInfo/mods:dateCreated
            OPTIONAL {
                ?_originInfo_element ?_originInfo_element_dateCreated_prop ?_dateCreated_element .
                ?_dateCreated_element a mods:dateCreated .
                OPTIONAL {
                    ?_dateCreated_element rdf:_1 ?_dateCreated .
                }
                OPTIONAL {
                    ?_dateCreated_element xyz:encoding ?_dateCreated_encoding .
                }
                BIND(
                    IF(
                        BOUND(?_dateCreated_encoding) && ?_dateCreated_encoding = "edtf",
                        STRDT(?_dateCreated, edtf:EDTF),
                        ?_dateCreated
                    )
                AS ?dateCreated)
            }
            # mods:mods/mods:originInfo/mods:dateIssued
            OPTIONAL {
                ?_originInfo_element ?_originInfo_element_dateIssued_prop ?_dateIssued_element .
                ?_dateIssued_element a mods:dateIssued .
                OPTIONAL {
                    ?_dateIssued_element rdf:_1 ?_dateIssued .
                }
                OPTIONAL {
                    ?_dateIssued_element xyz:encoding ?_dateIssued_encoding .
                }
                BIND(
                    IF(
                        BOUND(?_dateIssued_encoding) && ?_dateIssued_encoding = "edtf",
                        STRDT(?_dateIssued, edtf:EDTF),
                        ?_dateIssued
                    )
                AS ?dateIssued)
            }
            # mods:mods/mods:originInfo/mods:place
            OPTIONAL {
                ?_originInfo_element ?_originInfo_element_place_prop ?_place_element .
                ?_place_element a mods:place .
                OPTIONAL {
                    ?_place_element ?_place_element_placeTerm_prop ?_placeTerm_element .
                    ?_placeTerm_element a mods:placeTerm .
                    OPTIONAL {
                        ?_placeTerm_element rdf:_1 ?placeTerm .
                        OPTIONAL {
                            ?_placeTerm_element xyz:type ?_placeTerm_type .
                        }
                        OPTIONAL {
                            ?_placeTerm_element xyz:authority ?place_source .
                        }
                        OPTIONAL {
                            ?_placeTerm_element xyz:authorityURI ?_placeTerm_authorityURI .
                        }
                        BIND(
                            IF(
                                BOUND(?_placeTerm_type),
                                IF(
                                    ?_placeTerm_type = "text",
                                    rdfs:label,
                                    IF(
                                        ?_placeTerm_type = "code",
                                        bf:code,
                                        iri(CONCAT(str(haSip:), ?_placeTerm_type))
                                    )
                                ),
                                ?_null_14
                            )
                        as ?placeTerm_prop)
                    }
                }
                OPTIONAL {
                    ?_place_element ?_place_attribute ?_place_attr_value .
                    FILTER(!STRSTARTS(str(?_place_attribute), str(rdf:_)) && ?_place_attribute != rdf:type)
                }
            }
            BIND(
                IF(
                    BOUND(?_place_element),
                    iri(CONCAT(str(haObjId:), MD5(concat(?_originInfo_uuid, "_place")))),
                    ?_null_13
                )
            as ?place_iri)
            BIND(
                IF(
                    BOUND(?_placeTerm_element) && ?_placeTerm_type = "code",
                    IF(
                        BOUND(?_placeTerm_authorityURI),
                        iri(?_placeTerm_authorityURI),
                        IF(
                            BOUND(?place_source),
                            iri(CONCAT(str(haSip:), MD5(?place_source))),
                            "No mods:placeTerm/@authorityURI or mods:placeTerm/@authority found"
                        )
                    ),
                    ?_null_19
                )
            as ?place_source_iri)
            # mods:mods/mods:originInfo/mods:issuance
            OPTIONAL {
                ?_originInfo_element ?_originInfo_element_issuance_prop ?_issuance_element .
                ?_issuance_element a mods:issuance .
                OPTIONAL {
                    ?_issuance_element rdf:_1 ?issuance .
                }
                OPTIONAL {
                    # TODO add to resource
                    ?_issuance_element ?_issuance_attribute ?_issuance_attr_value .
                    FILTER(!?_issuance_attribute != rdf:_1 && ?_issuance_attribute != rdf:type)
                }
            }
            # mods:mods/mods:physicalDescription
            OPTIONAL {
                ?_physicalDescription_element a mods:physicalDescription .
                BIND(
                    strUUID()
                as ?_physicalDescription_uuid)
                # mods:mods/mods:physicalDescription/mods:extent
                OPTIONAL {
                    ?_physicalDescription_element ?_physicalDescription_element_extent_prop ?_extent_element .
                    ?_extent_element a mods:extent .
                    OPTIONAL {
                        ?_extent_element rdf:_1 ?extent .
                        OPTIONAL {
                            ?_extent_element xyz:unit ?extent_unit .
                        }
                    }
                    OPTIONAL {
                        ?_extent_element ?_extent_attribute ?_extent_attr_value .
                        FILTER(!?_extent_attribute != rdf:_1 && ?_extent_attribute != rdf:type)
                    }
                }
                BIND(
                    IF(
                        BOUND(?extent),
                        iri(CONCAT(str(haObjId:), MD5(?extent))),
                        ?_null_15
                    )
                as ?extent_iri)
                BIND(
                    IF(
                        BOUND(?extent_unit),
                        iri(CONCAT(str(haObjId:), MD5(?extent_unit))),
                        ?_null_16
                    )
                as ?extent_unit_iri)
                # mods:mods/mods:physicalDescription/mods:form
                OPTIONAL {
                    ?_physicalDescription_element ?_physicalDescription_element_form_prop ?_form_element .
                    ?_form_element a mods:form .
                    OPTIONAL {
                        ?_form_element rdf:_1 ?form .
                        OPTIONAL {
                            ?_form_element xyz:authority ?carrier_source .
                        }
                        OPTIONAL {
                            ?_form_element xyz:authorityURI ?_form_authorityURI .
                        }
                    }
                    OPTIONAL {
                        # TODO add to resource
                        ?_form_element ?_form_attribute ?_form_attr_value .
                        FILTER(!?_form_attribute != rdf:_1 && ?_form_attribute != rdf:type)
                    }
                }
                BIND(
                    IF(
                        BOUND(?_physicalDescription_element),
                        iri(CONCAT(str(haObjId:), MD5(concat(?_physicalDescription_uuid, "_carrier")))),
                        ?_null_17
                    )
                as ?carrier_iri)
                BIND(
                    IF(
                        BOUND(?_form_element),
                        IF(
                            BOUND(?_form_authorityURI),
                            iri(?_form_authorityURI),
                            IF(
                                BOUND(?carrier_source),
                                iri(CONCAT(str(haSip:), MD5(?carrier_source))),
                                "No mods:form authority"
                            )
                        ),
                        ?_null_18
                    )
                as ?carrier_source_iri)
            }
        }
    }
}